import streamlit as st
import boto3
import base64
import os
import json
import random
from dotenv import load_dotenv

# --- AWS Branding and Custom CSS ---
st.markdown("""
    <style>
    /* Header */
    .main > div:first-child {background: #232F3E;}
    .aws-header {
        background: #232F3E;
        color: #fff;
        padding: 1.5rem 1rem 1rem 1rem;
        border-radius: 0 0 12px 12px;
        margin-bottom: 2rem;
        text-align: left;
    }
    .aws-header img {
        height: 40px;
        vertical-align: middle;
        margin-right: 1rem;
    }
    .aws-title {
        font-size: 2.2rem;
        font-weight: 700;
        display: inline-block;
        vertical-align: middle;
    }
    .aws-subtitle {
        font-size: 1.1rem;
        color: #FF9900;
        margin-top: 0.2rem;
        margin-bottom: 0.5rem;
    }
    /* Button */
    .stButton > button {
        background-color: #FF9900;
        color: #232F3E;
        font-weight: bold;
        border-radius: 8px;
        border: none;
        padding: 0.7em 2em;
        font-size: 1.1em;
    }
    /* Text area */
    .stTextArea textarea {
        border-radius: 8px;
        border: 1px solid #FF9900;
        padding: 0.5em;
        font-size: 1.1em;
    }
    </style>
""", unsafe_allow_html=True)

st.markdown("""
<div class="aws-header">
    <img src="https://a0.awsstatic.com/libra-css/images/logos/aws_logo_smile_1200x630.png" alt="AWS Logo"/>
    <span class="aws-title">Bedrock Nova Canvas Image Generator</span>
    <div class="aws-subtitle">Powered by AWS Bedrock & Nova Canvas | Inspired by AWS Summit Sydney</div>
</div>
""", unsafe_allow_html=True)

# --- End AWS Branding ---

# Load environment variables from .env file
load_dotenv()

AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
AWS_SESSION_TOKEN = os.getenv('AWS_SESSION_TOKEN')
AWS_REGION = os.getenv('AWS_REGION', 'us-east-1')

# Prepare boto3 client arguments
boto3_args = {
    'service_name': 'bedrock-runtime',
    'region_name': AWS_REGION,
    'aws_access_key_id': AWS_ACCESS_KEY_ID,
    'aws_secret_access_key': AWS_SECRET_ACCESS_KEY
}
if AWS_SESSION_TOKEN:
    boto3_args['aws_session_token'] = AWS_SESSION_TOKEN

# Initialize Bedrock client
bedrock = boto3.client(**boto3_args)

def generate_image(prompt):
    try:
        seed = random.randint(0, 858993460)
        body = json.dumps({
            "taskType": "TEXT_IMAGE",
            "textToImageParams": {"text": prompt},
            "imageGenerationConfig": {
                "seed": seed,
                "quality": "standard",
                "height": 1024,
                "width": 1024,
                "numberOfImages": 1
            }
        })
        response = bedrock.invoke_model(
            modelId='amazon.nova-canvas-v1:0',
            body=body,
            contentType='application/json',
            accept='application/json'
        )
        response_body = json.loads(response['body'].read())
        image_data = response_body['images'][0]
        return image_data, None
    except Exception as e:
        return None, str(e)

st.title('')  # Hide default Streamlit title
prompt = st.text_area('Enter your image prompt:', '')
if st.button('Generate Image'):
    if not prompt.strip():
        st.warning('Please enter a prompt.')
    else:
        with st.spinner('Generating image...'):
            image_data, error = generate_image(prompt)
            if error:
                st.error(f'Error: {error}')
            elif image_data:
                st.image(base64.b64decode(image_data), caption='Generated by Nova Canvas', use_container_width=True)
            else:
                st.error('No image returned. Please try again.') 